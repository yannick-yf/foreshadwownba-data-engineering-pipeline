# https://github.com/dberenbaum/complex_config_example/blob/main/dvc.yaml
# https://github.com/interpretml/interpret
# https://github.com/microsoft/responsible-ai-toolbox/blob/main/notebooks/responsibleaidashboard/responsibleaidashboard-census-classification-model-debugging.ipynb
# https://github.com/microsoft/responsible-ai-toolbox/blob/main/notebooks/individual-dashboards/erroranalysis-dashboard/erroranalysis-dashboard-regression-housing.ipynb

# https://github.com/microsoft/responsible-ai-toolbox/blob/main/notebooks/individual-dashboards/erroranalysis-dashboard/erroranalysis-dashboard-regression-housing.ipynb
# https://techcommunity.microsoft.com/t5/ai-machine-learning-blog/responsible-ai-dashboard-a-one-stop-shop-for-operationalizing/ba-p/3030944
# https://github.com/microsoft/responsible-ai-toolbox/blob/main/notebooks/responsibleaidashboard/responsibleaidashboard-diabetes-regression-model-debugging.ipynb
# https://khuyentran1401.github.io/reproducible-data-science/structure_project/introduction.html

# dvc experiment: https://dvc.org/doc/start/experiments/experiment-collaboration?tab=DVC-CLI
# test coomit
vars:
  - project:
      directory: .
      algosdir: ./algorithms
  - ./algorithms/cli/processing/params.yaml:base,data_load,featurize,data_split
  - ./algorithms/cli/models/params.yaml:train,evaluate,initial_multiple_models_training,feature_selection_variety,feature_selection_avizio,feature_selection_weather,feature_selected_unification

stages:
  data_load:
    cmd:
    - >-
      aws s3 cp
      s3://cad-yannick/syncropshield-data-pipeline-output/datasets/final_training_dataset_m2_France_2016_2023.csv
      ${project.directory}/data/raw/obo_unified_training_dataset_dvc_training.csv
    deps:
      - s3://cad-yannick/syncropshield-data-pipeline-output/datasets/final_training_dataset_m2_France_2016_2023.csv
    outs:
      - ${project.directory}/data/raw/obo_unified_training_dataset_dvc_training.csv
  featurize:
    cmd:
    - >-
      poetry run featurize
      --dataset-csv ${project.directory}/${data_load.dataset_csv}
      --features-path ${project.directory}/${featurize.features_path}
      --project-config ${project.directory}/project.yaml
    deps:
    - ${project.directory}/data/raw/obo_unified_training_dataset_dvc_training.csv
    - ${project.algosdir}/cli/processing/featurize.py
    params:
      - ${project.algosdir}/cli/processing/params.yaml:
        - data_load.dataset_csv
        - featurize.features_path
    outs:
    - ${project.directory}/${featurize.features_path}
  data_split:
    cmd:
    - >-
      poetry run data-split
      --features-path ${project.directory}/${featurize.features_path}
      --trainset-path ${project.directory}/${data_split.trainset_path}
      --testset-path ${project.directory}/${data_split.testset_path}
      --split-ratio ${data_split.split_ratio}
      --random-state ${base.random_state}
      --index-col ${base.index_col}
      --group-cv-variable ${base.group_cv_variable}
      --project-config ${project.directory}/project.yaml
    deps:
    - ${project.directory}/data/processed/featured_syncropshield.csv
    - ${project.algosdir}/cli/processing/data_split.py
    params:
      - ${project.algosdir}/cli/processing/params.yaml:
        - base
        - data_split
        - featurize
    outs:
    - ${project.directory}/data/processed/test_syncropshield.csv
    - ${project.directory}/data/processed/train_syncropshield.csv
  feature_selection_variety:
    cmd:
    - >-
      poetry run feature_selection_variety
      --trainset-path ${project.directory}/${data_split.trainset_path}
      --columns-variety-selected-path ${project.directory}/${feature_selection_variety.columns_variety_selected_path}
      --target-column ${data_split.target_column}
      --cross-validation-n-splits ${feature_selection_variety.cross_validation_n_splits}
      --list-nb-feature-to-select ${feature_selection_variety.list_nb_feature_to_select}
      --rfe-step ${feature_selection_variety.rfe_step}
      --features-to-force ${feature_selection_variety.features_to_force}
      --random-state ${base.random_state}
      --index-col ${base.index_col}
      --group-cv-variable ${base.group_cv_variable}
      --project-config ${project.directory}/project.yaml
    deps:
    - ${project.directory}/data/processed/train_syncropshield.csv
    - ${project.algosdir}/code/syncropshield/feature_selection_variety.py
    - ${project.algosdir}/cli/models/feature_selection_variety.py
    params:
      - ${project.algosdir}/cli/models/params.yaml:
        - feature_selection_variety
        - data_split
        - base
    outs:
    - ${project.directory}/data/processed/variety_columns_selected.csv
  feature_selection_avizio:
    cmd:
    - >-
      poetry run feature_selection_avizio
      --trainset-path ${project.directory}/${data_split.trainset_path}
      --columns-avizio-selected-path ${project.directory}/${feature_selection_avizio.columns_avizio_selected_path}
      --target-column ${data_split.target_column}
      --cross-validation-n-splits ${feature_selection_avizio.cross_validation_n_splits}
      --list-nb-feature-to-select ${feature_selection_avizio.list_nb_feature_to_select}
      --rfe-step ${feature_selection_avizio.rfe_step}
      --random-state ${base.random_state}
      --index-col ${base.index_col}
      --group-cv-variable ${base.group_cv_variable}
      --project-config ${project.directory}/project.yaml
    deps:
    - ${project.directory}/data/processed/train_syncropshield.csv
    - ${project.algosdir}/code/syncropshield/feature_selection_avizio.py
    - ${project.algosdir}/cli/models/feature_selection_avizio.py
    params:
      - ${project.algosdir}/cli/models/params.yaml:
        - feature_selection_avizio
        - data_split
        - base
    outs:
    - ${project.directory}/data/processed/avizio_columns_selected.csv
  feature_selection_weather:
    cmd:
    - >-
      poetry run feature_selection_weather
      --trainset-path ${project.directory}/${data_split.trainset_path}
      --columns-weather-selected-path ${project.directory}/${feature_selection_weather.columns_weather_selected_path}
      --target-column ${data_split.target_column}
      --cross-validation-n-splits ${feature_selection_weather.cross_validation_n_splits}
      --list-nb-feature-to-select ${feature_selection_weather.list_nb_feature_to_select}
      --rfe-step ${feature_selection_weather.rfe_step}
      --random-state ${base.random_state}
      --index-col ${base.index_col}
      --group-cv-variable ${base.group_cv_variable}
      --project-config ${project.directory}/project.yaml
    deps:
    - ${project.directory}/data/processed/train_syncropshield.csv
    - ${project.algosdir}/code/syncropshield/feature_selection_weather.py
    - ${project.algosdir}/cli/models/feature_selection_weather.py
    params:
      - ${project.algosdir}/cli/models/params.yaml:
        - feature_selection_weather
        - data_split
        - base
    outs:
    - ${project.directory}/data/processed/weather_columns_selected.csv
  feature_selected_unification:
    cmd:
    - >-
      poetry run feature_selected_unification
      --trainset-path ${project.directory}/${data_split.trainset_path}
      --trainset-fs-path ${project.directory}/${feature_selected_unification.trainset_fs_path}
      --columns-weather-selected-path ${project.directory}/${feature_selection_weather.columns_weather_selected_path}
      --columns-variety-selected-path ${project.directory}/${feature_selection_variety.columns_variety_selected_path}
      --columns-avizio-selected-path ${project.directory}/${feature_selection_avizio.columns_avizio_selected_path}
      --target-column ${data_split.target_column}
      --index-col ${base.index_col}
      --group-cv-variable ${base.group_cv_variable}
      --project-config ${project.directory}/project.yaml
    deps:
    - ${project.directory}/data/processed/train_syncropshield.csv
    - ${project.directory}/data/processed/weather_columns_selected.csv
    - ${project.directory}/data/processed/avizio_columns_selected.csv
    - ${project.directory}/data/processed/variety_columns_selected.csv
    - ${project.algosdir}/code/syncropshield/feature_selected_unification.py
    - ${project.algosdir}/cli/models/feature_selected_unification.py
    params:
      - ${project.algosdir}/cli/models/params.yaml:
        - feature_selection_weather
        - feature_selection_avizio
        - feature_selection_variety
        - feature_selected_unification
        - data_split
        - base
    outs:
    - ${project.directory}/data/processed/train_syncropshield_fs.csv
  initial_multiple_models_training:
    cmd:
    - >-
      poetry run initial_multiple_models_training
      --trainset-fs-path ${project.directory}/${feature_selected_unification.trainset_fs_path}
      --target-column ${data_split.target_column}
      --multiple-models-results-path ${project.directory}/${initial_multiple_models_training.multiple_models_results_path}
      --cross-validation-n-splits ${initial_multiple_models_training.cross_validation_n_splits}
      --random-state ${initial_multiple_models_training.random_state}
      --index-col ${base.index_col}
      --group-cv-variable ${base.group_cv_variable}
      --project-config ${project.directory}/project.yaml
    deps:
    - ${project.directory}/data/processed/train_syncropshield_fs.csv
    - ${project.algosdir}/code/syncropshield/initial_multiple_models_training.py
    - ${project.algosdir}/cli/models/initial_multiple_models_training.py
    params:
      - ${project.algosdir}/cli/models/params.yaml:
        - initial_multiple_models_training
        - data_split
        - feature_selected_unification
        - base
    # outs:
    # initial_multiple_models_training.multiple_models_results_path
    # - ${project.directory}/${initial_multiple_models_training.multiple_models_results_path}
  train:
    cmd:
    - >-
      poetry run train
      --trainset-fs-path ${project.directory}/${feature_selected_unification.trainset_fs_path}
      --cross-val-scores-path ${project.directory}/${train.cross_val_scores_path}
      --model-path ${project.directory}/${train.model_path}
      --estimator-name ${train.estimator_name}
      --target-column ${data_split.target_column}
      --max-depth ${train.estimators.rfreg.param_grid.max_depth}
      --n-estimators ${train.estimators.rfreg.param_grid.n_estimators}
      --max-features ${train.estimators.rfreg.param_grid.max_features}
      --cross-validation-n-splits ${train.cross_validation_n_splits}
      --index-col ${base.index_col}
      --group-cv-variable ${base.group_cv_variable}
      --project-config ${project.directory}/project.yaml
    deps:
    - ${project.directory}/data/processed/train_syncropshield_fs.csv
    - ${project.algosdir}/code/syncropshield/training
    - ${project.algosdir}/code/syncropshield/train.py
    - ${project.algosdir}/cli/models/train.py
    params:
      - ${project.algosdir}/cli/models/params.yaml:
        - data_split
        - feature_selected_unification
        - train
        - base
    outs:
    - ${project.directory}/${train.model_path}
    - ${project.directory}/${train.cross_val_scores_path}
  evaluate:
    cmd:
    - >-
      poetry run evaluate
      --trainset-fs-path ${project.directory}/${feature_selected_unification.trainset_fs_path}
      --testset-path ${project.directory}/${data_split.testset_path}
      --cross-val-scores-path ${project.directory}/${train.cross_val_scores_path}
      --model-path ${project.directory}/${train.model_path}
      --metrics-path ${project.directory}/${evaluate.reports_dir}/${evaluate.metrics_path}
      --regression-image-path ${project.directory}/${evaluate.reports_dir}/${evaluate.regression_image}
      --target-column ${data_split.target_column}
      --index-col ${base.index_col}
      --group-cv-variable ${base.group_cv_variable}
      --shap-beeswarm-image-path ${project.directory}/${evaluate.reports_dir}/${evaluate.shap_beeswarm_image}
      --shap-plot-bar-image-path ${project.directory}/${evaluate.reports_dir}/${evaluate.shap_plot_bar_image}
      --regression-plot-data-path ${project.directory}/${evaluate.reports_dir}/${evaluate.regression_plot_data}
      --project-config ${project.directory}/project.yaml
    deps:
    - ${project.directory}/data/processed/train_syncropshield_fs.csv
    - ${project.directory}/data/processed/test_syncropshield.csv
    - ${project.directory}/${train.model_path}
    - ${project.directory}/${train.cross_val_scores_path}
    - ${project.algosdir}/cli/models/evaluate.py
    - ${project.algosdir}/code/syncropshield/report/visualization.py
    params:
      - ${project.algosdir}/cli/models/params.yaml:
        - evaluate
        - data_split
        - train
        - feature_selected_unification
        - base
    plots:
    - ${project.directory}/${evaluate.reports_dir}/${evaluate.regression_image}
    # - ${project.directory}/${evaluate.reports_dir}/${evaluate.shap_beeswarm_image}
    # - ${project.directory}/${evaluate.reports_dir}/${evaluate.shap_plot_bar_image}
    # - ${project.directory}/reports/regression_plot_data.csv:
    #     template: scatter
    #     x: predicted
    #     y: y_true
    metrics:
    - ${project.directory}/${evaluate.reports_dir}/${evaluate.metrics_path}:
        cache: false
  # # error_analysis:
  # #   cmd: python3 -m src.stages.error_analysis --config=params.yaml
  # #   deps:
  # #   - data/processed/test_syncropshield.csv
  # #   - data/processed/train_syncropshield.csv
  # #   - models/model.joblib
  # #   - src/stages/error_analysis.py
  # #   params:
  # #   - train
  # #   - data_split
  # #   - featurize
